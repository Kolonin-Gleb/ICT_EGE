# Эффективность программы # 27 ТИП В ЕГЭ

# Task 1
# Напишите как можно более эффективную по времени и по памяти программу
# Cреднее арифметическое всех оканчивающихся на 0 чисел.
'''
N = int(input())

total = 0 # Сумма чисел, оканчивающихся на 0
count = 0 # Количество чисел, оканчивающихся на 0


for _ in range(N):
    num = int(input())
    if num % 10 == 0:
        total += num
        count += 1

if count > 0:
    print(total / count) # avg
'''

# Task 2
'''
N = 10 # пусть размер последовательности будет таким
lst = [int(i) for i in range(N)]

# Следует ли считать пары типа "(1, 2)" и "(2, 1)" одинаковыми?
# Я считаю, что да, т.к. так легче считать.

for i in range(N):
    for j in range(i + 1, N):
        print(f"({lst[i]}, {lst[j]})")
'''

# Task 3
'''
N = 50 # пусть размер последовательности будет таким
lst = [int(i) for i in range(N)]

# Следует ли считать пары типа "(1, 2)" и "(2, 1)" одинаковыми?
# Я считаю, что да, т.к. так легче считать.

for i in range(N):
    for j in range(i + 5, N): # расстояние между эл. пары 5 и более!
        print(f"({lst[i]}, {lst[j]})")
'''

# Task 4
'''
N = 50 # пусть размер последовательности будет таким
sequence = list(range(N))

print("Суммы подпоследовательностей, кратные 3:")
for i in range(len(sequence)):
    for j in range(i + 1, len(sequence) + 1): # последний эл. включительно
        sub_sum = sum(sequence[i:j])
        if sub_sum % 3 == 0:
            print(sub_sum)
'''

