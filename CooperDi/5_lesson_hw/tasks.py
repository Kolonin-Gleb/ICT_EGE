# print(2**5)
# print(2**6)
# print(2**7)
# print(2**8)

# print(2**10)
# print(2**11)
# print(2**12)
# print(2**13)
# print(252*11/8)




# Тип 13 Адресация в сети


# Task 10095
# Сколько в этой сети IP-адресов,
# для которых сумма единиц в двоичной записи IP-адреса чётна?

# print(bin(160)[2:]) # ip
# print(bin(240)[2:]) # mask

# 10100000 ip
# 11110000 mask
# В маске 4 нуля, значит:
# 2**4 = 16 / 2 = 8 # Чётных IP-адресов.


# Task 10150
# Для узла с IP-адресом 145.192.94.230
# адрес сети равен      145.192.80.0.
# Чему равен третий слева байт маски? Ответ запишите в виде десятичного числа.

# ip   94
# mask 
# net  80

# ВАЖНО! Не забывай, что каждый разряд ip, mask и net представлен 8 битами.
# Если их не хватает -- добавляй незначащие нули слева!
# print(bin(94)[2:].zfill(8)) # ip   01011110
# #                           # mask 11110000
# print(bin(80)[2:].zfill(8)) # net  01010000

# # Ответ в 10 С.С.
# print(int('11110000', 2))
# 240



# Task 10149
# Для узла с IP-адресом 220.128.112.142
# адрес сети равен 220.128.96.0.
# Чему равен третий слева байт маски? 

# print(bin(112)[2:].zfill(8)) # ip 01110000
# #                            mask 11100000
# print(bin(96)[2:].zfill(8)) # net 01100000

# # Ответ запишите в виде десятичного числа.
# print(int('11100000', 2)) # 224

# Task 10152
# Для узла с IP-адресом 215.181.200.27 адрес сети равен 215.181.192.0.
# Чему равно наибольшее возможное значение третьего слева байта маски?
# Ответ запишите в виде десятичного числа.

# print(bin(200)[2:].zfill(8)) # ip  
# # mask                 
# print(bin(192)[2:].zfill(8)) # net 
# # 11001000 # ip
# # 11110000 # mask (max possible)
# # 11000000 # net

# print(int('11110000', 2))

# Task 10151
# Для узла с IP-адресом 111.81.208.27
# адрес сети равен 111.81.192.0.
# Чему равно наименьшее возможное значение третьего слева байта маски?
# Ответ запишите в виде десятичного числа.
'''
print(bin(208)[2:].zfill(8)) # ip  11010000
# mask                             11000000 min possible
print(bin(192)[2:].zfill(8)) # net 11000000

print(int('11000000', 2))
'''
# Task 10153

# Для узла с IP-адресом 115.12.69.38
# адрес сети равен 115.12.64.0.
# Найдите наименьшее возможное количество единиц в двоичной записи маски подсети.

# ВАЖНО: СПРАШИВАЮТ В МАСКЕ ПОДСЕТИ, ЗНАЧИТ ВО ВСЕЙ МАСКЕ
# ПОСЛЕДНИЙ РАЗРЯД МАСКИ - ВСЕ 0, Т.К. В АДРЕСЕ 0

'''
print(bin(69)[2:].zfill(8)) # ip   01000101
print(bin(64)[2:].zfill(8)) # net  01000000
print('11111111.11111111.11000000'.count('1'))
'''

# Task 10154
# Для узла с IP-адресом 148.195.140.28 # ip
# адрес сети равен      148.195.140.0. # net
# Найдите наименьшее возможное количество единиц в двоичной записи маски подсети. ЦЕЛИКОМ МАСКЕ
'''
'''
# 1 разряд маски - все 1
# 2 разряд маски - все 1
# 4 разряд маски - все 0, т.к. в адресе получился 0 (Минимизируем, поэтому все 0)
# TODO: Т.к. в 3ем байте 140 (содержит 0) этот разряд тоже нужно проверять?
# 3 разряд маски:
'''
print(bin(140)[2:].zfill(8)) #  ip 10001100
#                            #mask 11111100 # (min mask possible with last two 0's)
print(bin(0)[2:].zfill(8))   # net 10001100
# 
print("11111111.11111111.11111100.00000000".count('1'))
'''

# Task 10165
'''
'''

# Task 10166
'''
'''

# Task 10167
'''
'''

# Task 10168
'''
'''

# Task 12245
'''
'''


