
'''
На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
Строится троичная запись числа N.
Далее эта запись обрабатывается по следующему правилу:
а) если число N делится на 3, то слева к нему приписывается «1», а справа «02»;
6) если число N на 3 не делится, то остаток от деления на 3 умножается на 4, переводится в троичную запись и дописывается в конец числа.
Полученная таким образом запись является троичной записью искомого числа R.
Результат переводится в десятичную систему и выводится на экран.

ПРОВЕРИТЬ ПРАВИЛЬНОСТЬ РАБОТЫ АЛГОРИТМА

Например, для исходного числа 11 = 102(3) результатом является число 10
222(3)= 107, а для исходного числа 12 = 1103 это число 111_002(3) = 353.


Укажите МАКСИМАЛЛЬНОЕ число N, после обработки которого с помощью этого алгоритма получается число R, меньшее 199.
'''
"""
def dec_to_3(n):
    res = ''
    while n > 0:
        res = str(n % 3) + res # Cохраняем остатки в прямом порядке, чтобы не переворачивать строку
        # Работает до 9 С.С.
        n = n // 3
    return(res)

# а) если число N делится на 3, то слева к нему приписывается «1», а справа «02»;
# 6) если число N на 3 не делится, то остаток от деления на 3 умножается на 4, переводится в троичную запись и дописывается в конец числа.
# Полученная таким образом запись является троичной записью искомого числа R.

lst = []
for N in range(1, 100):
    N_3 = dec_to_3(N)
    if N % 3 == 0:
        R = '1' + N_3 + '02'
    else:
        R = N_3 + dec_to_3( (N % 3) * 4 )

    if int(R, 3) < 199:
        print(N) # Максимальное = последнее
"""

'''
'''
a = []
for N in range(4,100): #берем с 4, так как числа меньше не дадут нам 3-ех цифр в двоичной системе
    if N % 3 == 0:
        bin_N = bin(N)[2:] + bin(N)[-3:]
        #print(N,bin(N)[2:],bin_N) #выводим числа для отладки. Проверяем правильно ли работает алгоритм
    else:
        ost = (N % 3) * 3
        bin_N = bin(N)[2:] + bin(ost)[2:]
        #print(N, bin(N)[2:], bin_N)

    R = int(bin_N, 2)
    if R > 151:
        a.append(R)
print(min(a))
