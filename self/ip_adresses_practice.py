'''
from ipaddress import *

# сеть 192.168.32.160
# маска 255.255.255.240
# Сколько в этой сети IP адресов, для которых сумма единиц в двоичной записи ip-адреса чётна?

net = ip_network(address='192.168.32.160/255.255.255.240')
k = 0

for ip in net:
    if bin(int(ip)).count('1') % 2 == 0:
        k += 1

print(k)
'''

# Task 114
'''
mask: 11111111.11111111.111*****.**000000
ip:   10000100.00101111.10100000.00101110
net:  10000100.00101111.10100000.00000000

count(8) = 7
Ответом НЕ ЯВЛЯЕТСЯ: 2^7 = 128, т.к. в этом случае учитываются случаи с чередованием 0 и 1
что не допустимо в маске.

Распишем возможные варианты:
Tp)*****.**
1) 00000 00
2) 10000 00
3) 11000 00
4) 11100 00
5) 11110 00
6) 11111 00
7) 11111 10
8) 11111 11
'''

# Task 127
'''
'''

ip   =   '111.81.200.27'
net  =   '111.81.192.00'
# mask = None
# Какое наименьшее кол. адресов может быть в этой сети?


print(bin(int(ip)))

