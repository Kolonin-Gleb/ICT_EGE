# Task 27
'''
# f = open('27A_test.txt')
f = open('27A-1.txt')
N = int(f.readline())
K = int(f.readline())
data = [int(el) for el in f]
f.close()

max_pair_sum = 0

for i in range(N): # Идём по всем записям
    for j in range(i+1, N):
        if j - i >= K:
            max_pair_sum = max(max_pair_sum, (data[i] + data[j]))
print(max_pair_sum) # 174902
'''

# Для пункта Б - оптимизация без перебора!!!
'''
f=open('27_22.txt')
n=int(f.readline())
k=int(f.readline())
a=[int(x) for x in f]
mx=0 #локальный максимум. максимальный элемент, расположенный до нужного числа,
#  на нужном расстоянии
mxs=0 #максимальная сумма двух элементов
for i in range(k,n):
    mx=max(mx,a[i-k])
    mxs=max(mxs,a[i]+mx)
print(mxs)
'''

# TASK 27 ANOTHER
'''
На вход программы поступает последовательность из N натуральных чисел. Рассматриваются все пары различных элементов последовательности (элементы пары не обязательно должны стоять в последовательности рядом, порядок в паре неважен). Необходимо определить количество пар, для которых произведение элементов кратно 7, сумма элементов чётна, а номера элементов в последовательности отличаются не менее, чем на K.
Входные данные
Даны два входных файла (A и B), каждый из которых в первой строке содержит число N - количество чисел, во второй строке K – минимальная разница между номерами элементов (1 ≤ N ≤ 10 000 000, N > K). В каждой из следующих N строк записаны элементы последовательности (все числа неотрицательные, не превышающие 2 000 000).
В ответе укажите два числа: сначала значение искомой величины для файла A, затем - для файла B.
Типовой пример организации данных во входном файле
10
4
36
95
78
33
33
69
7
57
56
58
Пример выходных данных для приведённого выше примера входных данных:
3
В ответе укажите два числа: сначала значение искомой суммы для файла А, затем для файла B.
'''
'''
f = open('27A_ANOTHER_test.txt')
# f = open('27A-1.txt')
N = int(f.readline())
K = int(f.readline())
data = [int(el) for el in f]
f.close()

pair_counter = 0

for i in range(N): # Идём по всем записям
    for j in range(i+1, N):
        if j - i >= K:
            if (data[i] * data[j]) % 7 == 0 and (data[i] + data[j]) % 2 == 0:
                pair_counter += 1
print(pair_counter) # 
'''

f=open('27B_7875.txt')
n=int(f.readline())
k=int(f.readline())
a=[int(x) for x in f]
k7_0=0
k7_1=0
nk7_0=0
nk7_1=0
count=0
for i in range(k,n):
    if a[i-k]%7==0 and a[i-k]%2==0:
        k7_0+=1
    if a[i-k]%7==0 and a[i-k]%2!=0:
        k7_1+=1
    if a[i-k]%7!=0 and a[i-k]%2==0:
        nk7_0+=1
    if a[i-k]%7!=0 and a[i-k]%2!=0:
        nk7_1+=1
    if a[i]%7==0 and a[i]%2==0:
        count+=k7_0+nk7_0
    if a[i]%7==0 and a[i]%2!=0:
        count+=k7_1+nk7_1
    if a[i]%7!=0 and a[i]%2==0:
        count+=k7_0
    if a[i]%7!=0 and a[i]%2!=0:
        count+=k7_1
print(count)
